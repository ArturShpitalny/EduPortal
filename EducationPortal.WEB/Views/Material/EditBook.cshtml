@model EducationPortal.WEB.Models.ViewModel.BookModel

@{
    ViewBag.Title = "EditBook";
    Layout = "~/Views/Shared/_AdminMainPageLayout.cshtml";
}

<div class="col-12">
    <div class="row justify-content-center">
        <div class="col-10  border rounded-lg bg-light my-3">
            <div class="row justify-content-center">
                @using (Html.BeginForm("EditBook", "Material", FormMethod.Post, new { enctype = "multipart/form-data", @class = "w-75", @role = "form" }))
                {
                    <h5 class="text-center text-uppercase mt-2">Редактор книги</h5>
                    @Html.AntiForgeryToken()

                    <div>
                        @Html.HiddenFor(x => x.Id)

                        <div class="form-group">
                            @Html.LabelFor(x => x.MaterialName)
                            @Html.EditorFor(x => x.MaterialName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.MaterialName, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MaterialDescription)
                            @Html.EditorFor(x => x.MaterialDescription, new { htmlAttributes = new { @class = "form-control", rows = 3 } })
                            @Html.ValidationMessageFor(x => x.MaterialDescription, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MaterialResource)
                            @Html.EditorFor(x => x.MaterialResource, new { htmlAttributes = new { @class = "form-control", rows = 3 } })
                            @Html.ValidationMessageFor(x => x.MaterialResource, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.BookAuthors)
                            @Html.EditorFor(x => x.BookAuthors, new { htmlAttributes = new { @class = "form-control", rows = 2 } })
                            @Html.ValidationMessageFor(x => x.BookAuthors, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.BookFormat)
                            <select name="BookFormat" class="form-control">
                                @foreach (var c in new string[] { "txt", "doc", "docx", "pdf", "djvu", "odt" })
                                {
                                    if (Model.BookFormat == c)
                                    {
                                        <option selected value="@c">@c</option>
                                    }
                                    else
                                    {
                                        <option value="@c">@c</option>
                                    }
                                }
                            </select>
                            @Html.ValidationMessageFor(x => x.BookFormat, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.BookPages)
                            @Html.EditorFor(x => x.BookPages, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.BookPages, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.BookYear)
                            @Html.EditorFor(x => x.BookYear, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.BookYear, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.SkillId)
                            @Html.Action("MaterialSkill", "Skill", new { selectedId = Model.SkillId })
                            @Html.ValidationMessageFor(x => x.SkillId, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="d-flex justify-content-center my-2">
                            <button type="submit" class="btn btn-primary mx-1">
                                <i class="fa fa-floppy-o"></i>
                            </button>
                            <a class="btn btn-outline-danger mx-1" href="@Url.Action("AdminPanelMaterial", "Material", new { id = -1 })">
                                <i class="fa fa-ban"></i>
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>